version: '3.8'

services:
  # app:
  #   build: 
  #     context: .
  #     dockerfile: deployment/Dockerfile.dev
  #   platform: linux/arm64
  #   volumes:
  #     - .:/app
  #     - python_deps:/usr/local/lib/python3.12/site-packages
  #   ports:
  #     - "8000:8000"
  #   env_file:
  #     - .env
  #   environment:
  #     - PYTHONPATH=/app
  #     - DJANGO_SETTINGS_MODULE=app.core.settings
  #     - POSTGRES_HOST=postgres
  #     - REDIS_HOST=redis
  #     - MINIO_HOST=minio
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
  #     minio:
  #       condition: service_healthy
  #   command: python manage.py runserver 0.0.0.0:8000

  postgres:
    image: postgres:15-alpine
    platform: linux/arm64
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    platform: linux/arm64
    env_file:
      - .env
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --requirepass ${REDIS_PASSWORD} --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:latest
    platform: linux/arm64
    env_file:
      - .env
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

volumes:
  postgres_data:
  redis_data:
  minio_data:
  python_deps: 